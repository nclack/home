# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" "thunderbolt"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];
  boot.extraModprobeConfig = ''
    options usbcore autosuspend=-1
  '';
  boot.kernelParams = ["nvidia_drm.fbdev=1"];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/9e5efe33-094a-428a-86aa-a0c665559986";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/15E3-F48A";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/35aaead4-5810-4c6f-a494-98110cefc5f3";}
  ];

  # Mount points for data drives
  fileSystems."/data/nvme" = {
    device = "/dev/disk/by-uuid/f84c5193-8e70-40bc-b2a8-b5f099a19f49";
    fsType = "ext4";
  };

  fileSystems."/data/sata" = {
    device = "/dev/disk/by-uuid/b6840909-d405-496b-80ac-9f074b4cfe45";
    fsType = "ext4";
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0f2u2u4u5.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
